{"ast":null,"code":"var _jsxFileName = \"/Users/chenwentao/Desktop/react\\u5B66\\u4E60/goods-client/src/pages/login/login.jsx\";\nimport React from \"react\";\nimport { Form, Input, Button, Icon } from \"antd\";\nimport \"./login.less\";\nimport logo from \"./images/logo.jpg\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // const form = this.props.form \n      // const values = form .getFieldsValue()\n\n      this.props.form.validateFields((err, values) => {\n        //校验成功\n        if (!err) {\n          console.log('提交登陆的ajax请求 ', values);\n        } else {\n          console.log('校验失败');\n        }\n      });\n    };\n\n    this.validarePwd = (rule, value, callback) => {\n      callback(1111); // console.log(\"333\",rule,value)\n\n      if (!value) {//callback('密码必须输入')\n      } else if (value.lenth < 4) {\n        callback('密码长度不能小于4');\n      } else if (value.lenth > 12) {\n        callback('密码长度不能大于12');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('用户名必须是字母，数字，下划线组成');\n      } else {\n        callback();\n      }\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"login-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"react \\u5546\\u54C1\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\")), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"login-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"\\u7528\\u6237\\u767B\\u9646\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('username', {\n      //配置对象：属性名是特定的名称\n      rules: [//声明式验证\n      {\n        required: true,\n        whitespace: true,\n        message: 'Please input your username!'\n      }, {\n        min: 4,\n        message: '用户名至少4位'\n      }, {\n        max: 12,\n        message: '用户名最多12位'\n      }, {\n        pattern: /^[a-zA-Z0-9_]+$/,\n        message: '用户名必须是字母，数字，下划线组成'\n      }] // initialValue:'admin'\n\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        validator: this.validarePwd\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Log in\")))));\n  }\n\n}\n\nconst WrapLogin = Form.create()(Login);\nexport default WrapLogin;","map":{"version":3,"sources":["/Users/chenwentao/Desktop/react学习/goods-client/src/pages/login/login.jsx"],"names":["React","Form","Input","Button","Icon","logo","Login","Component","handleSubmit","event","preventDefault","props","form","validateFields","err","values","console","log","validarePwd","rule","value","callback","lenth","test","render","getFieldDecorator","rules","required","whitespace","message","min","max","pattern","color","validator","WrapLogin","create"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA6BC,IAA7B,QAAyC,MAAzC;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCC,YADkC,GAClBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAExB;AACA;;AAEA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C;AACA,YAAI,CAACD,GAAL,EAAU;AACRE,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B;AACD,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACF,OAPH;AASD,KAfiC;;AAAA,SAkBlCC,WAlBkC,GAkBpB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AACtCA,MAAAA,QAAQ,CAAC,IAAD,CAAR,CADsC,CAEvC;;AACA,UAAG,CAACD,KAAJ,EAAW,CACP;AACH,OAFD,MAEO,IAAGA,KAAK,CAACE,KAAN,GAAc,CAAjB,EAAoB;AACvBD,QAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,OAFM,MAEA,IAAGD,KAAK,CAACE,KAAN,GAAc,EAAjB,EAAqB;AACxBD,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,OAFM,MAEA,IAAG,CAAC,kBAAkBE,IAAlB,CAAuBH,KAAvB,CAAJ,EAAkC;AACrCC,QAAAA,QAAQ,CAAC,mBAAD,CAAR;AACH,OAFM,MAED;AACFA,QAAAA,QAAQ;AACX;AACF,KAhCiC;AAAA;;AAkClCG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKd,KAAL,CAAWC,IAAvC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEP,IAAV;AAAgB,MAAA,GAAG,EAAC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFF,CADF,eAKE;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCiB,iBAAiB,CAAC,UAAD,EAAa;AAAE;AACjCC,MAAAA,KAAK,EAAE,CACH;AACA;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAiBC,QAAAA,UAAU,EAAC,IAA5B;AAAkCC,QAAAA,OAAO,EAAE;AAA3C,OAFG,EAGH;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUD,QAAAA,OAAO,EAAE;AAAnB,OAHG,EAIH;AAAEE,QAAAA,GAAG,EAAE,EAAP;AAAWF,QAAAA,OAAO,EAAE;AAApB,OAJG,EAKH;AAAEG,QAAAA,OAAO,EAAE,iBAAX;AAA8BH,QAAAA,OAAO,EAAE;AAAvC,OALG,CADwB,CAQ/B;;AAR+B,KAAb,CAAjB,eAUD,oBAAC,KAAD;AACE,MAAA,MAAM,eAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,WAAW,EAAC,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVC,CADD,CADF,eAkBE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCR,iBAAiB,CAAC,UAAD,EAAa;AAC/BC,MAAAA,KAAK,EAAE,CACH;AAACQ,QAAAA,SAAS,EAAC,KAAKhB;AAAhB,OADG;AADwB,KAAb,CAAjB,eAKD,oBAAC,KAAD;AACE,MAAA,MAAM,eAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALC,CADD,CAlBF,eA+BE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,QAAQ,EAAC,QAFX;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA/BF,CAFF,CALF,CADF;AAoDD;;AA1FiC;;AA6FpC,MAAME,SAAS,GAAIlC,IAAI,CAACmC,MAAL,GAAc9B,KAAd,CAAnB;AACA,eAAe6B,SAAf","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button,Icon } from \"antd\";\n\nimport \"./login.less\";\nimport logo from \"./images/logo.jpg\";\n\nclass Login extends React.Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // const form = this.props.form \n    // const values = form .getFieldsValue()\n\n    this.props.form.validateFields((err, values) => {\n        //校验成功\n        if (!err) {\n          console.log('提交登陆的ajax请求 ', values);\n        } else {\n            console.log('校验失败')\n        }\n      });\n    \n  };\n\n  //对密码进行自定义验证\n  validarePwd = (rule, value, callback) => {\n     callback(1111)\n    // console.log(\"333\",rule,value)\n    if(!value) {\n        //callback('密码必须输入')\n    } else if(value.lenth < 4) {\n        callback('密码长度不能小于4')\n    } else if(value.lenth > 12) {\n        callback('密码长度不能大于12')\n    } else if(!/^[a-zA-Z0-9_]+$/.test(value)){\n        callback('用户名必须是字母，数字，下划线组成')\n    } else{\n        callback()\n    }\n  }\n\n  render() {\n\n    const {getFieldDecorator} = this.props.form\n\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          <img src={logo} alt=\"\" />\n          <h1>react 商品后台管理系统</h1>\n        </header>\n        <section className=\"login-content\">\n          <h2>用户登陆</h2>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n            {getFieldDecorator('username', { //配置对象：属性名是特定的名称\n            rules: [\n                //声明式验证\n                { required: true,whitespace:true, message: 'Please input your username!' },\n                { min: 4, message: '用户名至少4位' },\n                { max: 12, message: '用户名最多12位' },\n                { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是字母，数字，下划线组成' },\n            ],\n            // initialValue:'admin'\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n            </Form.Item>\n            <Form.Item>\n            {getFieldDecorator('password', {\n            rules: [\n                {validator:this.validarePwd}\n            ],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst WrapLogin  = Form.create()(Login)\nexport default WrapLogin"]},"metadata":{},"sourceType":"module"}